//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EK_MultipleTransporter.DmsDocumentManagementService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DmsOpsSoap", Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityNode[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityAttributeGroup[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityDataValue[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class DmsOps : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetNodeCategoryListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromFavoritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToFavoritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavoritesOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesOfNodeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuditRecordsOfNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocumentWithMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMajorVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetadataLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDocumentToServerAndReturnRefGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMultilingualMetadataOfNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDocumentOrVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderListIncludingChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityNodeByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityNodeFromIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNodeAvailableWithSameNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInheritedCategoryIdsOfNodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrUpdateNodeCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityAttributeGroupOfCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityMetadataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidValuesOfAttributeFromDbOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCategoriesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DmsOps() {
            this.Url = global::EK_MultipleTransporter.Properties.Settings.Default.EK_MultipleTransporter_DmsDocumentManagementService_DmsOps;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetNodeCategoryListsCompletedEventHandler GetNodeCategoryListsCompleted;
        
        /// <remarks/>
        public event GetCategoryDefinitionCompletedEventHandler GetCategoryDefinitionCompleted;
        
        /// <remarks/>
        public event RemoveFromFavoritesCompletedEventHandler RemoveFromFavoritesCompleted;
        
        /// <remarks/>
        public event AddToFavoritesCompletedEventHandler AddToFavoritesCompleted;
        
        /// <remarks/>
        public event GetFavoritesOfUserCompletedEventHandler GetFavoritesOfUserCompleted;
        
        /// <remarks/>
        public event GetReferencesOfNodeByIdCompletedEventHandler GetReferencesOfNodeByIdCompleted;
        
        /// <remarks/>
        public event GetAuditRecordsOfNodeCompletedEventHandler GetAuditRecordsOfNodeCompleted;
        
        /// <remarks/>
        public event AddDocumentWithMetadataCompletedEventHandler AddDocumentWithMetadataCompleted;
        
        /// <remarks/>
        public event AddMajorVersionCompletedEventHandler AddMajorVersionCompleted;
        
        /// <remarks/>
        public event GetMetadataLanguagesCompletedEventHandler GetMetadataLanguagesCompleted;
        
        /// <remarks/>
        public event RenameNodeCompletedEventHandler RenameNodeCompleted;
        
        /// <remarks/>
        public event CopyNodeCompletedEventHandler CopyNodeCompleted;
        
        /// <remarks/>
        public event DeleteNodeCompletedEventHandler DeleteNodeCompleted;
        
        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;
        
        /// <remarks/>
        public event CreateFoldersCompletedEventHandler CreateFoldersCompleted;
        
        /// <remarks/>
        public event MoveNodeCompletedEventHandler MoveNodeCompleted;
        
        /// <remarks/>
        public event GetChildNodesCompletedEventHandler GetChildNodesCompleted;
        
        /// <remarks/>
        public event GetVersionsCompletedEventHandler GetVersionsCompleted;
        
        /// <remarks/>
        public event DownloadDocumentToServerAndReturnRefGuidCompletedEventHandler DownloadDocumentToServerAndReturnRefGuidCompleted;
        
        /// <remarks/>
        public event DownloadDocumentCompletedEventHandler DownloadDocumentCompleted;
        
        /// <remarks/>
        public event UpdateMultilingualMetadataOfNodeCompletedEventHandler UpdateMultilingualMetadataOfNodeCompleted;
        
        /// <remarks/>
        public event AddDocumentOrVersionCompletedEventHandler AddDocumentOrVersionCompleted;
        
        /// <remarks/>
        public event GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventHandler GetEntityNodeListIncludingChildrenUsingTypeFilterCompleted;
        
        /// <remarks/>
        public event GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventHandler GetKeyValuePairListIncludingChildrenUsingTypeFilterCompleted;
        
        /// <remarks/>
        public event GetFolderListIncludingChildrenCompletedEventHandler GetFolderListIncludingChildrenCompleted;
        
        /// <remarks/>
        public event AddVersionCompletedEventHandler AddVersionCompleted;
        
        /// <remarks/>
        public event GetEntityNodeByNameCompletedEventHandler GetEntityNodeByNameCompleted;
        
        /// <remarks/>
        public event GetEntityNodeFromIdCompletedEventHandler GetEntityNodeFromIdCompleted;
        
        /// <remarks/>
        public event CreateCategoryCompletedEventHandler CreateCategoryCompleted;
        
        /// <remarks/>
        public event IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventHandler IsNodeAvailableWithSameNameUnderGivenFolderNameCompleted;
        
        /// <remarks/>
        public event IsNodeAvailableWithSameNameCompletedEventHandler IsNodeAvailableWithSameNameCompleted;
        
        /// <remarks/>
        public event GetInheritedCategoryIdsOfNodeCompletedEventHandler GetInheritedCategoryIdsOfNodeCompleted;
        
        /// <remarks/>
        public event AddOrUpdateNodeCategoriesCompletedEventHandler AddOrUpdateNodeCategoriesCompleted;
        
        /// <remarks/>
        public event GetEntityAttributeGroupOfCategoryCompletedEventHandler GetEntityAttributeGroupOfCategoryCompleted;
        
        /// <remarks/>
        public event GetEntityMetadataCompletedEventHandler GetEntityMetadataCompleted;
        
        /// <remarks/>
        public event GetValidValuesOfAttributeFromDbCompletedEventHandler GetValidValuesOfAttributeFromDbCompleted;
        
        /// <remarks/>
        public event GetAllCategoriesCompletedEventHandler GetAllCategoriesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetNodeCategoryLists", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityPlainCategory[] GetNodeCategoryLists(string clientuser, string refToken, long nodeId, bool systemOperation) {
            object[] results = this.Invoke("GetNodeCategoryLists", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        systemOperation});
            return ((EntityPlainCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNodeCategoryListsAsync(string clientuser, string refToken, long nodeId, bool systemOperation) {
            this.GetNodeCategoryListsAsync(clientuser, refToken, nodeId, systemOperation, null);
        }
        
        /// <remarks/>
        public void GetNodeCategoryListsAsync(string clientuser, string refToken, long nodeId, bool systemOperation, object userState) {
            if ((this.GetNodeCategoryListsOperationCompleted == null)) {
                this.GetNodeCategoryListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNodeCategoryListsOperationCompleted);
            }
            this.InvokeAsync("GetNodeCategoryLists", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        systemOperation}, this.GetNodeCategoryListsOperationCompleted, userState);
        }
        
        private void OnGetNodeCategoryListsOperationCompleted(object arg) {
            if ((this.GetNodeCategoryListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNodeCategoryListsCompleted(this, new GetNodeCategoryListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetCategoryDefinition", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityAttributeGroupDefinition GetCategoryDefinition(string clientuser, string refToken, long categoryId) {
            object[] results = this.Invoke("GetCategoryDefinition", new object[] {
                        clientuser,
                        refToken,
                        categoryId});
            return ((EntityAttributeGroupDefinition)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryDefinitionAsync(string clientuser, string refToken, long categoryId) {
            this.GetCategoryDefinitionAsync(clientuser, refToken, categoryId, null);
        }
        
        /// <remarks/>
        public void GetCategoryDefinitionAsync(string clientuser, string refToken, long categoryId, object userState) {
            if ((this.GetCategoryDefinitionOperationCompleted == null)) {
                this.GetCategoryDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetCategoryDefinition", new object[] {
                        clientuser,
                        refToken,
                        categoryId}, this.GetCategoryDefinitionOperationCompleted, userState);
        }
        
        private void OnGetCategoryDefinitionOperationCompleted(object arg) {
            if ((this.GetCategoryDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryDefinitionCompleted(this, new GetCategoryDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/RemoveFromFavorites", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFromFavorites(string clientuser, string refToken, long nodeId) {
            this.Invoke("RemoveFromFavorites", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
        }
        
        /// <remarks/>
        public void RemoveFromFavoritesAsync(string clientuser, string refToken, long nodeId) {
            this.RemoveFromFavoritesAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void RemoveFromFavoritesAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.RemoveFromFavoritesOperationCompleted == null)) {
                this.RemoveFromFavoritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromFavoritesOperationCompleted);
            }
            this.InvokeAsync("RemoveFromFavorites", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.RemoveFromFavoritesOperationCompleted, userState);
        }
        
        private void OnRemoveFromFavoritesOperationCompleted(object arg) {
            if ((this.RemoveFromFavoritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromFavoritesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddToFavorites", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddToFavorites(string clientuser, string refToken, long nodeId) {
            this.Invoke("AddToFavorites", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
        }
        
        /// <remarks/>
        public void AddToFavoritesAsync(string clientuser, string refToken, long nodeId) {
            this.AddToFavoritesAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void AddToFavoritesAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.AddToFavoritesOperationCompleted == null)) {
                this.AddToFavoritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToFavoritesOperationCompleted);
            }
            this.InvokeAsync("AddToFavorites", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.AddToFavoritesOperationCompleted, userState);
        }
        
        private void OnAddToFavoritesOperationCompleted(object arg) {
            if ((this.AddToFavoritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToFavoritesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetFavoritesOfUser", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode[] GetFavoritesOfUser(string clientuser, string refToken, bool populateExtraData, bool populatePermissionsData) {
            object[] results = this.Invoke("GetFavoritesOfUser", new object[] {
                        clientuser,
                        refToken,
                        populateExtraData,
                        populatePermissionsData});
            return ((EntityNode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFavoritesOfUserAsync(string clientuser, string refToken, bool populateExtraData, bool populatePermissionsData) {
            this.GetFavoritesOfUserAsync(clientuser, refToken, populateExtraData, populatePermissionsData, null);
        }
        
        /// <remarks/>
        public void GetFavoritesOfUserAsync(string clientuser, string refToken, bool populateExtraData, bool populatePermissionsData, object userState) {
            if ((this.GetFavoritesOfUserOperationCompleted == null)) {
                this.GetFavoritesOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavoritesOfUserOperationCompleted);
            }
            this.InvokeAsync("GetFavoritesOfUser", new object[] {
                        clientuser,
                        refToken,
                        populateExtraData,
                        populatePermissionsData}, this.GetFavoritesOfUserOperationCompleted, userState);
        }
        
        private void OnGetFavoritesOfUserOperationCompleted(object arg) {
            if ((this.GetFavoritesOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavoritesOfUserCompleted(this, new GetFavoritesOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetReferencesOfNodeById", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode[] GetReferencesOfNodeById(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData) {
            object[] results = this.Invoke("GetReferencesOfNodeById", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        populateExtraData,
                        populatePermissionsData});
            return ((EntityNode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesOfNodeByIdAsync(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData) {
            this.GetReferencesOfNodeByIdAsync(clientuser, refToken, nodeId, populateExtraData, populatePermissionsData, null);
        }
        
        /// <remarks/>
        public void GetReferencesOfNodeByIdAsync(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData, object userState) {
            if ((this.GetReferencesOfNodeByIdOperationCompleted == null)) {
                this.GetReferencesOfNodeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesOfNodeByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferencesOfNodeById", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        populateExtraData,
                        populatePermissionsData}, this.GetReferencesOfNodeByIdOperationCompleted, userState);
        }
        
        private void OnGetReferencesOfNodeByIdOperationCompleted(object arg) {
            if ((this.GetReferencesOfNodeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesOfNodeByIdCompleted(this, new GetReferencesOfNodeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetAuditRecordsOfNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNodeAuditRecord[] GetAuditRecordsOfNode(string clientuser, string refToken, long nodeId) {
            object[] results = this.Invoke("GetAuditRecordsOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
            return ((EntityNodeAuditRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAuditRecordsOfNodeAsync(string clientuser, string refToken, long nodeId) {
            this.GetAuditRecordsOfNodeAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void GetAuditRecordsOfNodeAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.GetAuditRecordsOfNodeOperationCompleted == null)) {
                this.GetAuditRecordsOfNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuditRecordsOfNodeOperationCompleted);
            }
            this.InvokeAsync("GetAuditRecordsOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.GetAuditRecordsOfNodeOperationCompleted, userState);
        }
        
        private void OnGetAuditRecordsOfNodeOperationCompleted(object arg) {
            if ((this.GetAuditRecordsOfNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuditRecordsOfNodeCompleted(this, new GetAuditRecordsOfNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddDocumentWithMetadata", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddDocumentWithMetadata(string clientuser, string refToken, long parentId, EntityMetadata emd, EntityAttachment ea, string comment) {
            object[] results = this.Invoke("AddDocumentWithMetadata", new object[] {
                        clientuser,
                        refToken,
                        parentId,
                        emd,
                        ea,
                        comment});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocumentWithMetadataAsync(string clientuser, string refToken, long parentId, EntityMetadata emd, EntityAttachment ea, string comment) {
            this.AddDocumentWithMetadataAsync(clientuser, refToken, parentId, emd, ea, comment, null);
        }
        
        /// <remarks/>
        public void AddDocumentWithMetadataAsync(string clientuser, string refToken, long parentId, EntityMetadata emd, EntityAttachment ea, string comment, object userState) {
            if ((this.AddDocumentWithMetadataOperationCompleted == null)) {
                this.AddDocumentWithMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocumentWithMetadataOperationCompleted);
            }
            this.InvokeAsync("AddDocumentWithMetadata", new object[] {
                        clientuser,
                        refToken,
                        parentId,
                        emd,
                        ea,
                        comment}, this.AddDocumentWithMetadataOperationCompleted, userState);
        }
        
        private void OnAddDocumentWithMetadataOperationCompleted(object arg) {
            if ((this.AddDocumentWithMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocumentWithMetadataCompleted(this, new AddDocumentWithMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddMajorVersion", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityVersion AddMajorVersion(string clientuser, string refToken, long nodeId, EntityMetadata emd, EntityAttachment ea, bool systemOperation) {
            object[] results = this.Invoke("AddMajorVersion", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        emd,
                        ea,
                        systemOperation});
            return ((EntityVersion)(results[0]));
        }
        
        /// <remarks/>
        public void AddMajorVersionAsync(string clientuser, string refToken, long nodeId, EntityMetadata emd, EntityAttachment ea, bool systemOperation) {
            this.AddMajorVersionAsync(clientuser, refToken, nodeId, emd, ea, systemOperation, null);
        }
        
        /// <remarks/>
        public void AddMajorVersionAsync(string clientuser, string refToken, long nodeId, EntityMetadata emd, EntityAttachment ea, bool systemOperation, object userState) {
            if ((this.AddMajorVersionOperationCompleted == null)) {
                this.AddMajorVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMajorVersionOperationCompleted);
            }
            this.InvokeAsync("AddMajorVersion", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        emd,
                        ea,
                        systemOperation}, this.AddMajorVersionOperationCompleted, userState);
        }
        
        private void OnAddMajorVersionOperationCompleted(object arg) {
            if ((this.AddMajorVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMajorVersionCompleted(this, new AddMajorVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetMetadataLanguages", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KeyValuePair[] GetMetadataLanguages(string clientuser, string refToken) {
            object[] results = this.Invoke("GetMetadataLanguages", new object[] {
                        clientuser,
                        refToken});
            return ((KeyValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetadataLanguagesAsync(string clientuser, string refToken) {
            this.GetMetadataLanguagesAsync(clientuser, refToken, null);
        }
        
        /// <remarks/>
        public void GetMetadataLanguagesAsync(string clientuser, string refToken, object userState) {
            if ((this.GetMetadataLanguagesOperationCompleted == null)) {
                this.GetMetadataLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetadataLanguagesOperationCompleted);
            }
            this.InvokeAsync("GetMetadataLanguages", new object[] {
                        clientuser,
                        refToken}, this.GetMetadataLanguagesOperationCompleted, userState);
        }
        
        private void OnGetMetadataLanguagesOperationCompleted(object arg) {
            if ((this.GetMetadataLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetadataLanguagesCompleted(this, new GetMetadataLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/RenameNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameNode(string clientuser, string refToken, long dmsNodeId, string newName) {
            this.Invoke("RenameNode", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        newName});
        }
        
        /// <remarks/>
        public void RenameNodeAsync(string clientuser, string refToken, long dmsNodeId, string newName) {
            this.RenameNodeAsync(clientuser, refToken, dmsNodeId, newName, null);
        }
        
        /// <remarks/>
        public void RenameNodeAsync(string clientuser, string refToken, long dmsNodeId, string newName, object userState) {
            if ((this.RenameNodeOperationCompleted == null)) {
                this.RenameNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameNodeOperationCompleted);
            }
            this.InvokeAsync("RenameNode", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        newName}, this.RenameNodeOperationCompleted, userState);
        }
        
        private void OnRenameNodeOperationCompleted(object arg) {
            if ((this.RenameNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameNodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/CopyNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CopyNode(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName) {
            object[] results = this.Invoke("CopyNode", new object[] {
                        clientuser,
                        refToken,
                        dmsSourceNodeId,
                        dmsTargetNodeId,
                        newName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CopyNodeAsync(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName) {
            this.CopyNodeAsync(clientuser, refToken, dmsSourceNodeId, dmsTargetNodeId, newName, null);
        }
        
        /// <remarks/>
        public void CopyNodeAsync(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName, object userState) {
            if ((this.CopyNodeOperationCompleted == null)) {
                this.CopyNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyNodeOperationCompleted);
            }
            this.InvokeAsync("CopyNode", new object[] {
                        clientuser,
                        refToken,
                        dmsSourceNodeId,
                        dmsTargetNodeId,
                        newName}, this.CopyNodeOperationCompleted, userState);
        }
        
        private void OnCopyNodeOperationCompleted(object arg) {
            if ((this.CopyNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyNodeCompleted(this, new CopyNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/DeleteNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteNode(string clientuser, string refToken, long dmsNodeId, bool systemOperation) {
            object[] results = this.Invoke("DeleteNode", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        systemOperation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNodeAsync(string clientuser, string refToken, long dmsNodeId, bool systemOperation) {
            this.DeleteNodeAsync(clientuser, refToken, dmsNodeId, systemOperation, null);
        }
        
        /// <remarks/>
        public void DeleteNodeAsync(string clientuser, string refToken, long dmsNodeId, bool systemOperation, object userState) {
            if ((this.DeleteNodeOperationCompleted == null)) {
                this.DeleteNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNodeOperationCompleted);
            }
            this.InvokeAsync("DeleteNode", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        systemOperation}, this.DeleteNodeOperationCompleted, userState);
        }
        
        private void OnDeleteNodeOperationCompleted(object arg) {
            if ((this.DeleteNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNodeCompleted(this, new DeleteNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/CreateFolder", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateFolder(string clientuser, string refToken, long parentNodeId, string folderName, string comment) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        folderName,
                        comment});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string clientuser, string refToken, long parentNodeId, string folderName, string comment) {
            this.CreateFolderAsync(clientuser, refToken, parentNodeId, folderName, comment, null);
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string clientuser, string refToken, long parentNodeId, string folderName, string comment, object userState) {
            if ((this.CreateFolderOperationCompleted == null)) {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        folderName,
                        comment}, this.CreateFolderOperationCompleted, userState);
        }
        
        private void OnCreateFolderOperationCompleted(object arg) {
            if ((this.CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/CreateFolders", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateFolders(string clientuser, string refToken, long parentNodeId, string[] lstFolderNames, string comment) {
            object[] results = this.Invoke("CreateFolders", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        lstFolderNames,
                        comment});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFoldersAsync(string clientuser, string refToken, long parentNodeId, string[] lstFolderNames, string comment) {
            this.CreateFoldersAsync(clientuser, refToken, parentNodeId, lstFolderNames, comment, null);
        }
        
        /// <remarks/>
        public void CreateFoldersAsync(string clientuser, string refToken, long parentNodeId, string[] lstFolderNames, string comment, object userState) {
            if ((this.CreateFoldersOperationCompleted == null)) {
                this.CreateFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFoldersOperationCompleted);
            }
            this.InvokeAsync("CreateFolders", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        lstFolderNames,
                        comment}, this.CreateFoldersOperationCompleted, userState);
        }
        
        private void OnCreateFoldersOperationCompleted(object arg) {
            if ((this.CreateFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFoldersCompleted(this, new CreateFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/MoveNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveNode(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName, EntityAttributeSourceType east) {
            object[] results = this.Invoke("MoveNode", new object[] {
                        clientuser,
                        refToken,
                        dmsSourceNodeId,
                        dmsTargetNodeId,
                        newName,
                        east});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveNodeAsync(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName, EntityAttributeSourceType east) {
            this.MoveNodeAsync(clientuser, refToken, dmsSourceNodeId, dmsTargetNodeId, newName, east, null);
        }
        
        /// <remarks/>
        public void MoveNodeAsync(string clientuser, string refToken, long dmsSourceNodeId, long dmsTargetNodeId, string newName, EntityAttributeSourceType east, object userState) {
            if ((this.MoveNodeOperationCompleted == null)) {
                this.MoveNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveNodeOperationCompleted);
            }
            this.InvokeAsync("MoveNode", new object[] {
                        clientuser,
                        refToken,
                        dmsSourceNodeId,
                        dmsTargetNodeId,
                        newName,
                        east}, this.MoveNodeOperationCompleted, userState);
        }
        
        private void OnMoveNodeOperationCompleted(object arg) {
            if ((this.MoveNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveNodeCompleted(this, new MoveNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetChildNodes", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode[] GetChildNodes(string clientuser, string refToken, long dmsNodeId, int maxDepth, int maxResults, bool populateExtraData, bool populatePermissionsData) {
            object[] results = this.Invoke("GetChildNodes", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        maxDepth,
                        maxResults,
                        populateExtraData,
                        populatePermissionsData});
            return ((EntityNode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildNodesAsync(string clientuser, string refToken, long dmsNodeId, int maxDepth, int maxResults, bool populateExtraData, bool populatePermissionsData) {
            this.GetChildNodesAsync(clientuser, refToken, dmsNodeId, maxDepth, maxResults, populateExtraData, populatePermissionsData, null);
        }
        
        /// <remarks/>
        public void GetChildNodesAsync(string clientuser, string refToken, long dmsNodeId, int maxDepth, int maxResults, bool populateExtraData, bool populatePermissionsData, object userState) {
            if ((this.GetChildNodesOperationCompleted == null)) {
                this.GetChildNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildNodesOperationCompleted);
            }
            this.InvokeAsync("GetChildNodes", new object[] {
                        clientuser,
                        refToken,
                        dmsNodeId,
                        maxDepth,
                        maxResults,
                        populateExtraData,
                        populatePermissionsData}, this.GetChildNodesOperationCompleted, userState);
        }
        
        private void OnGetChildNodesOperationCompleted(object arg) {
            if ((this.GetChildNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildNodesCompleted(this, new GetChildNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetVersions", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityVersion[] GetVersions(string clientuser, string refToken, long nodeId) {
            object[] results = this.Invoke("GetVersions", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
            return ((EntityVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionsAsync(string clientuser, string refToken, long nodeId) {
            this.GetVersionsAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void GetVersionsAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.GetVersionsOperationCompleted == null)) {
                this.GetVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionsOperationCompleted);
            }
            this.InvokeAsync("GetVersions", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.GetVersionsOperationCompleted, userState);
        }
        
        private void OnGetVersionsOperationCompleted(object arg) {
            if ((this.GetVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionsCompleted(this, new GetVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/DownloadDocumentToServerAndRet" +
            "urnRefGuid", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadDocumentToServerAndReturnRefGuid(string clientuser, string refToken, long nodeId, long versionNumber) {
            object[] results = this.Invoke("DownloadDocumentToServerAndReturnRefGuid", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        versionNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDocumentToServerAndReturnRefGuidAsync(string clientuser, string refToken, long nodeId, long versionNumber) {
            this.DownloadDocumentToServerAndReturnRefGuidAsync(clientuser, refToken, nodeId, versionNumber, null);
        }
        
        /// <remarks/>
        public void DownloadDocumentToServerAndReturnRefGuidAsync(string clientuser, string refToken, long nodeId, long versionNumber, object userState) {
            if ((this.DownloadDocumentToServerAndReturnRefGuidOperationCompleted == null)) {
                this.DownloadDocumentToServerAndReturnRefGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentToServerAndReturnRefGuidOperationCompleted);
            }
            this.InvokeAsync("DownloadDocumentToServerAndReturnRefGuid", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        versionNumber}, this.DownloadDocumentToServerAndReturnRefGuidOperationCompleted, userState);
        }
        
        private void OnDownloadDocumentToServerAndReturnRefGuidOperationCompleted(object arg) {
            if ((this.DownloadDocumentToServerAndReturnRefGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDocumentToServerAndReturnRefGuidCompleted(this, new DownloadDocumentToServerAndReturnRefGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/DownloadDocument", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadDocument(string clientuser, string refToken, long nodeId, bool systemOperation, int versionNumber) {
            object[] results = this.Invoke("DownloadDocument", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        systemOperation,
                        versionNumber});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadDocumentAsync(string clientuser, string refToken, long nodeId, bool systemOperation, int versionNumber) {
            this.DownloadDocumentAsync(clientuser, refToken, nodeId, systemOperation, versionNumber, null);
        }
        
        /// <remarks/>
        public void DownloadDocumentAsync(string clientuser, string refToken, long nodeId, bool systemOperation, int versionNumber, object userState) {
            if ((this.DownloadDocumentOperationCompleted == null)) {
                this.DownloadDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentOperationCompleted);
            }
            this.InvokeAsync("DownloadDocument", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        systemOperation,
                        versionNumber}, this.DownloadDocumentOperationCompleted, userState);
        }
        
        private void OnDownloadDocumentOperationCompleted(object arg) {
            if ((this.DownloadDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadDocumentCompleted(this, new DownloadDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/UpdateMultilingualMetadataOfNo" +
            "de", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMultilingualMetadataOfNode(string clientuser, string refToken, long nodeId, KeyValuePair[] lstKeyValuePairs) {
            this.Invoke("UpdateMultilingualMetadataOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        lstKeyValuePairs});
        }
        
        /// <remarks/>
        public void UpdateMultilingualMetadataOfNodeAsync(string clientuser, string refToken, long nodeId, KeyValuePair[] lstKeyValuePairs) {
            this.UpdateMultilingualMetadataOfNodeAsync(clientuser, refToken, nodeId, lstKeyValuePairs, null);
        }
        
        /// <remarks/>
        public void UpdateMultilingualMetadataOfNodeAsync(string clientuser, string refToken, long nodeId, KeyValuePair[] lstKeyValuePairs, object userState) {
            if ((this.UpdateMultilingualMetadataOfNodeOperationCompleted == null)) {
                this.UpdateMultilingualMetadataOfNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMultilingualMetadataOfNodeOperationCompleted);
            }
            this.InvokeAsync("UpdateMultilingualMetadataOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        lstKeyValuePairs}, this.UpdateMultilingualMetadataOfNodeOperationCompleted, userState);
        }
        
        private void OnUpdateMultilingualMetadataOfNodeOperationCompleted(object arg) {
            if ((this.UpdateMultilingualMetadataOfNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMultilingualMetadataOfNodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddDocumentOrVersion", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddDocumentOrVersion(string clientuser, string refToken, EntityAttachment ea, long parentId, string comment, bool systemOperation) {
            object[] results = this.Invoke("AddDocumentOrVersion", new object[] {
                        clientuser,
                        refToken,
                        ea,
                        parentId,
                        comment,
                        systemOperation});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddDocumentOrVersionAsync(string clientuser, string refToken, EntityAttachment ea, long parentId, string comment, bool systemOperation) {
            this.AddDocumentOrVersionAsync(clientuser, refToken, ea, parentId, comment, systemOperation, null);
        }
        
        /// <remarks/>
        public void AddDocumentOrVersionAsync(string clientuser, string refToken, EntityAttachment ea, long parentId, string comment, bool systemOperation, object userState) {
            if ((this.AddDocumentOrVersionOperationCompleted == null)) {
                this.AddDocumentOrVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDocumentOrVersionOperationCompleted);
            }
            this.InvokeAsync("AddDocumentOrVersion", new object[] {
                        clientuser,
                        refToken,
                        ea,
                        parentId,
                        comment,
                        systemOperation}, this.AddDocumentOrVersionOperationCompleted, userState);
        }
        
        private void OnAddDocumentOrVersionOperationCompleted(object arg) {
            if ((this.AddDocumentOrVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDocumentOrVersionCompleted(this, new AddDocumentOrVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetEntityNodeListIncludingChil" +
            "drenUsingTypeFilter", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode[] GetEntityNodeListIncludingChildrenUsingTypeFilter(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation) {
            object[] results = this.Invoke("GetEntityNodeListIncludingChildrenUsingTypeFilter", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        pageSize,
                        typeFilter,
                        systemOperation});
            return ((EntityNode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityNodeListIncludingChildrenUsingTypeFilterAsync(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation) {
            this.GetEntityNodeListIncludingChildrenUsingTypeFilterAsync(clientuser, refToken, nodeId, pageSize, typeFilter, systemOperation, null);
        }
        
        /// <remarks/>
        public void GetEntityNodeListIncludingChildrenUsingTypeFilterAsync(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation, object userState) {
            if ((this.GetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted == null)) {
                this.GetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted);
            }
            this.InvokeAsync("GetEntityNodeListIncludingChildrenUsingTypeFilter", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        pageSize,
                        typeFilter,
                        systemOperation}, this.GetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted, userState);
        }
        
        private void OnGetEntityNodeListIncludingChildrenUsingTypeFilterOperationCompleted(object arg) {
            if ((this.GetEntityNodeListIncludingChildrenUsingTypeFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityNodeListIncludingChildrenUsingTypeFilterCompleted(this, new GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetKeyValuePairListIncludingCh" +
            "ildrenUsingTypeFilter", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KeyValuePair[] GetKeyValuePairListIncludingChildrenUsingTypeFilter(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation) {
            object[] results = this.Invoke("GetKeyValuePairListIncludingChildrenUsingTypeFilter", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        pageSize,
                        typeFilter,
                        systemOperation});
            return ((KeyValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void GetKeyValuePairListIncludingChildrenUsingTypeFilterAsync(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation) {
            this.GetKeyValuePairListIncludingChildrenUsingTypeFilterAsync(clientuser, refToken, nodeId, pageSize, typeFilter, systemOperation, null);
        }
        
        /// <remarks/>
        public void GetKeyValuePairListIncludingChildrenUsingTypeFilterAsync(string clientuser, string refToken, long nodeId, int pageSize, string typeFilter, bool systemOperation, object userState) {
            if ((this.GetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted == null)) {
                this.GetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted);
            }
            this.InvokeAsync("GetKeyValuePairListIncludingChildrenUsingTypeFilter", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        pageSize,
                        typeFilter,
                        systemOperation}, this.GetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted, userState);
        }
        
        private void OnGetKeyValuePairListIncludingChildrenUsingTypeFilterOperationCompleted(object arg) {
            if ((this.GetKeyValuePairListIncludingChildrenUsingTypeFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeyValuePairListIncludingChildrenUsingTypeFilterCompleted(this, new GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetFolderListIncludingChildren" +
            "", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KeyValuePair[] GetFolderListIncludingChildren(string clientuser, string refToken, long nodeId) {
            object[] results = this.Invoke("GetFolderListIncludingChildren", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
            return ((KeyValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderListIncludingChildrenAsync(string clientuser, string refToken, long nodeId) {
            this.GetFolderListIncludingChildrenAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void GetFolderListIncludingChildrenAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.GetFolderListIncludingChildrenOperationCompleted == null)) {
                this.GetFolderListIncludingChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderListIncludingChildrenOperationCompleted);
            }
            this.InvokeAsync("GetFolderListIncludingChildren", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.GetFolderListIncludingChildrenOperationCompleted, userState);
        }
        
        private void OnGetFolderListIncludingChildrenOperationCompleted(object arg) {
            if ((this.GetFolderListIncludingChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderListIncludingChildrenCompleted(this, new GetFolderListIncludingChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddVersion", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddVersion(string clientuser, string refToken, long nodeId, EntityAttachment ea, bool systemOperation) {
            object[] results = this.Invoke("AddVersion", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        ea,
                        systemOperation});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddVersionAsync(string clientuser, string refToken, long nodeId, EntityAttachment ea, bool systemOperation) {
            this.AddVersionAsync(clientuser, refToken, nodeId, ea, systemOperation, null);
        }
        
        /// <remarks/>
        public void AddVersionAsync(string clientuser, string refToken, long nodeId, EntityAttachment ea, bool systemOperation, object userState) {
            if ((this.AddVersionOperationCompleted == null)) {
                this.AddVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVersionOperationCompleted);
            }
            this.InvokeAsync("AddVersion", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        ea,
                        systemOperation}, this.AddVersionOperationCompleted, userState);
        }
        
        private void OnAddVersionOperationCompleted(object arg) {
            if ((this.AddVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVersionCompleted(this, new AddVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetEntityNodeByName", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode GetEntityNodeByName(string clientuser, string refToken, long parentNodeId, string nodeName, bool populateExtraData, bool populatePermissionsData, bool systemOperation) {
            object[] results = this.Invoke("GetEntityNodeByName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        nodeName,
                        populateExtraData,
                        populatePermissionsData,
                        systemOperation});
            return ((EntityNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityNodeByNameAsync(string clientuser, string refToken, long parentNodeId, string nodeName, bool populateExtraData, bool populatePermissionsData, bool systemOperation) {
            this.GetEntityNodeByNameAsync(clientuser, refToken, parentNodeId, nodeName, populateExtraData, populatePermissionsData, systemOperation, null);
        }
        
        /// <remarks/>
        public void GetEntityNodeByNameAsync(string clientuser, string refToken, long parentNodeId, string nodeName, bool populateExtraData, bool populatePermissionsData, bool systemOperation, object userState) {
            if ((this.GetEntityNodeByNameOperationCompleted == null)) {
                this.GetEntityNodeByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityNodeByNameOperationCompleted);
            }
            this.InvokeAsync("GetEntityNodeByName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        nodeName,
                        populateExtraData,
                        populatePermissionsData,
                        systemOperation}, this.GetEntityNodeByNameOperationCompleted, userState);
        }
        
        private void OnGetEntityNodeByNameOperationCompleted(object arg) {
            if ((this.GetEntityNodeByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityNodeByNameCompleted(this, new GetEntityNodeByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetEntityNodeFromId", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityNode GetEntityNodeFromId(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData, bool systemOperation) {
            object[] results = this.Invoke("GetEntityNodeFromId", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        populateExtraData,
                        populatePermissionsData,
                        systemOperation});
            return ((EntityNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityNodeFromIdAsync(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData, bool systemOperation) {
            this.GetEntityNodeFromIdAsync(clientuser, refToken, nodeId, populateExtraData, populatePermissionsData, systemOperation, null);
        }
        
        /// <remarks/>
        public void GetEntityNodeFromIdAsync(string clientuser, string refToken, long nodeId, bool populateExtraData, bool populatePermissionsData, bool systemOperation, object userState) {
            if ((this.GetEntityNodeFromIdOperationCompleted == null)) {
                this.GetEntityNodeFromIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityNodeFromIdOperationCompleted);
            }
            this.InvokeAsync("GetEntityNodeFromId", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        populateExtraData,
                        populatePermissionsData,
                        systemOperation}, this.GetEntityNodeFromIdOperationCompleted, userState);
        }
        
        private void OnGetEntityNodeFromIdOperationCompleted(object arg) {
            if ((this.GetEntityNodeFromIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityNodeFromIdCompleted(this, new GetEntityNodeFromIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/CreateCategory", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateCategory(string clientuser, string refToken, CatDefinition cd) {
            object[] results = this.Invoke("CreateCategory", new object[] {
                        clientuser,
                        refToken,
                        cd});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCategoryAsync(string clientuser, string refToken, CatDefinition cd) {
            this.CreateCategoryAsync(clientuser, refToken, cd, null);
        }
        
        /// <remarks/>
        public void CreateCategoryAsync(string clientuser, string refToken, CatDefinition cd, object userState) {
            if ((this.CreateCategoryOperationCompleted == null)) {
                this.CreateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCategoryOperationCompleted);
            }
            this.InvokeAsync("CreateCategory", new object[] {
                        clientuser,
                        refToken,
                        cd}, this.CreateCategoryOperationCompleted, userState);
        }
        
        private void OnCreateCategoryOperationCompleted(object arg) {
            if ((this.CreateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCategoryCompleted(this, new CreateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/IsNodeAvailableWithSameNameUnd" +
            "erGivenFolderName", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IsNodeAvailableWithSameNameUnderGivenFolderName(string clientuser, string refToken, long parentNodeId, string[] lstPath, string nodeName) {
            object[] results = this.Invoke("IsNodeAvailableWithSameNameUnderGivenFolderName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        lstPath,
                        nodeName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IsNodeAvailableWithSameNameUnderGivenFolderNameAsync(string clientuser, string refToken, long parentNodeId, string[] lstPath, string nodeName) {
            this.IsNodeAvailableWithSameNameUnderGivenFolderNameAsync(clientuser, refToken, parentNodeId, lstPath, nodeName, null);
        }
        
        /// <remarks/>
        public void IsNodeAvailableWithSameNameUnderGivenFolderNameAsync(string clientuser, string refToken, long parentNodeId, string[] lstPath, string nodeName, object userState) {
            if ((this.IsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted == null)) {
                this.IsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted);
            }
            this.InvokeAsync("IsNodeAvailableWithSameNameUnderGivenFolderName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        lstPath,
                        nodeName}, this.IsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted, userState);
        }
        
        private void OnIsNodeAvailableWithSameNameUnderGivenFolderNameOperationCompleted(object arg) {
            if ((this.IsNodeAvailableWithSameNameUnderGivenFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNodeAvailableWithSameNameUnderGivenFolderNameCompleted(this, new IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/IsNodeAvailableWithSameName", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IsNodeAvailableWithSameName(string clientuser, string refToken, long parentNodeId, string nodeName) {
            object[] results = this.Invoke("IsNodeAvailableWithSameName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        nodeName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IsNodeAvailableWithSameNameAsync(string clientuser, string refToken, long parentNodeId, string nodeName) {
            this.IsNodeAvailableWithSameNameAsync(clientuser, refToken, parentNodeId, nodeName, null);
        }
        
        /// <remarks/>
        public void IsNodeAvailableWithSameNameAsync(string clientuser, string refToken, long parentNodeId, string nodeName, object userState) {
            if ((this.IsNodeAvailableWithSameNameOperationCompleted == null)) {
                this.IsNodeAvailableWithSameNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNodeAvailableWithSameNameOperationCompleted);
            }
            this.InvokeAsync("IsNodeAvailableWithSameName", new object[] {
                        clientuser,
                        refToken,
                        parentNodeId,
                        nodeName}, this.IsNodeAvailableWithSameNameOperationCompleted, userState);
        }
        
        private void OnIsNodeAvailableWithSameNameOperationCompleted(object arg) {
            if ((this.IsNodeAvailableWithSameNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNodeAvailableWithSameNameCompleted(this, new IsNodeAvailableWithSameNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetInheritedCategoryIdsOfNode", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetInheritedCategoryIdsOfNode(string clientuser, string refToken, long nodeId) {
            object[] results = this.Invoke("GetInheritedCategoryIdsOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInheritedCategoryIdsOfNodeAsync(string clientuser, string refToken, long nodeId) {
            this.GetInheritedCategoryIdsOfNodeAsync(clientuser, refToken, nodeId, null);
        }
        
        /// <remarks/>
        public void GetInheritedCategoryIdsOfNodeAsync(string clientuser, string refToken, long nodeId, object userState) {
            if ((this.GetInheritedCategoryIdsOfNodeOperationCompleted == null)) {
                this.GetInheritedCategoryIdsOfNodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInheritedCategoryIdsOfNodeOperationCompleted);
            }
            this.InvokeAsync("GetInheritedCategoryIdsOfNode", new object[] {
                        clientuser,
                        refToken,
                        nodeId}, this.GetInheritedCategoryIdsOfNodeOperationCompleted, userState);
        }
        
        private void OnGetInheritedCategoryIdsOfNodeOperationCompleted(object arg) {
            if ((this.GetInheritedCategoryIdsOfNodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInheritedCategoryIdsOfNodeCompleted(this, new GetInheritedCategoryIdsOfNodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/AddOrUpdateNodeCategories", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOrUpdateNodeCategories(string clientuser, string refToken, long nodeId, EntityMetadata entityMetadata, bool mergeOldMetadata, bool systemOperation) {
            object[] results = this.Invoke("AddOrUpdateNodeCategories", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        entityMetadata,
                        mergeOldMetadata,
                        systemOperation});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrUpdateNodeCategoriesAsync(string clientuser, string refToken, long nodeId, EntityMetadata entityMetadata, bool mergeOldMetadata, bool systemOperation) {
            this.AddOrUpdateNodeCategoriesAsync(clientuser, refToken, nodeId, entityMetadata, mergeOldMetadata, systemOperation, null);
        }
        
        /// <remarks/>
        public void AddOrUpdateNodeCategoriesAsync(string clientuser, string refToken, long nodeId, EntityMetadata entityMetadata, bool mergeOldMetadata, bool systemOperation, object userState) {
            if ((this.AddOrUpdateNodeCategoriesOperationCompleted == null)) {
                this.AddOrUpdateNodeCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateNodeCategoriesOperationCompleted);
            }
            this.InvokeAsync("AddOrUpdateNodeCategories", new object[] {
                        clientuser,
                        refToken,
                        nodeId,
                        entityMetadata,
                        mergeOldMetadata,
                        systemOperation}, this.AddOrUpdateNodeCategoriesOperationCompleted, userState);
        }
        
        private void OnAddOrUpdateNodeCategoriesOperationCompleted(object arg) {
            if ((this.AddOrUpdateNodeCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrUpdateNodeCategoriesCompleted(this, new AddOrUpdateNodeCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetEntityAttributeGroupOfCateg" +
            "ory", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityAttributeGroup GetEntityAttributeGroupOfCategory(string clientuser, string refToken, long categoryId) {
            object[] results = this.Invoke("GetEntityAttributeGroupOfCategory", new object[] {
                        clientuser,
                        refToken,
                        categoryId});
            return ((EntityAttributeGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityAttributeGroupOfCategoryAsync(string clientuser, string refToken, long categoryId) {
            this.GetEntityAttributeGroupOfCategoryAsync(clientuser, refToken, categoryId, null);
        }
        
        /// <remarks/>
        public void GetEntityAttributeGroupOfCategoryAsync(string clientuser, string refToken, long categoryId, object userState) {
            if ((this.GetEntityAttributeGroupOfCategoryOperationCompleted == null)) {
                this.GetEntityAttributeGroupOfCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityAttributeGroupOfCategoryOperationCompleted);
            }
            this.InvokeAsync("GetEntityAttributeGroupOfCategory", new object[] {
                        clientuser,
                        refToken,
                        categoryId}, this.GetEntityAttributeGroupOfCategoryOperationCompleted, userState);
        }
        
        private void OnGetEntityAttributeGroupOfCategoryOperationCompleted(object arg) {
            if ((this.GetEntityAttributeGroupOfCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityAttributeGroupOfCategoryCompleted(this, new GetEntityAttributeGroupOfCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetEntityMetadata", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityMetadata GetEntityMetadata(string clientuser, string refToken, long[] categoryIds) {
            object[] results = this.Invoke("GetEntityMetadata", new object[] {
                        clientuser,
                        refToken,
                        categoryIds});
            return ((EntityMetadata)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityMetadataAsync(string clientuser, string refToken, long[] categoryIds) {
            this.GetEntityMetadataAsync(clientuser, refToken, categoryIds, null);
        }
        
        /// <remarks/>
        public void GetEntityMetadataAsync(string clientuser, string refToken, long[] categoryIds, object userState) {
            if ((this.GetEntityMetadataOperationCompleted == null)) {
                this.GetEntityMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityMetadataOperationCompleted);
            }
            this.InvokeAsync("GetEntityMetadata", new object[] {
                        clientuser,
                        refToken,
                        categoryIds}, this.GetEntityMetadataOperationCompleted, userState);
        }
        
        private void OnGetEntityMetadataOperationCompleted(object arg) {
            if ((this.GetEntityMetadataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityMetadataCompleted(this, new GetEntityMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetValidValuesOfAttributeFromD" +
            "b", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetValidValuesOfAttributeFromDb(string clientuser, string refToken, long categoryId, long nodeId, string fieldName, KeyValueObjectPair[] lstKvpDependentFieldsAndValues, KeyValueObjectPair[] lstKvpDependentFieldsAndTypes) {
            object[] results = this.Invoke("GetValidValuesOfAttributeFromDb", new object[] {
                        clientuser,
                        refToken,
                        categoryId,
                        nodeId,
                        fieldName,
                        lstKvpDependentFieldsAndValues,
                        lstKvpDependentFieldsAndTypes});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetValidValuesOfAttributeFromDbAsync(string clientuser, string refToken, long categoryId, long nodeId, string fieldName, KeyValueObjectPair[] lstKvpDependentFieldsAndValues, KeyValueObjectPair[] lstKvpDependentFieldsAndTypes) {
            this.GetValidValuesOfAttributeFromDbAsync(clientuser, refToken, categoryId, nodeId, fieldName, lstKvpDependentFieldsAndValues, lstKvpDependentFieldsAndTypes, null);
        }
        
        /// <remarks/>
        public void GetValidValuesOfAttributeFromDbAsync(string clientuser, string refToken, long categoryId, long nodeId, string fieldName, KeyValueObjectPair[] lstKvpDependentFieldsAndValues, KeyValueObjectPair[] lstKvpDependentFieldsAndTypes, object userState) {
            if ((this.GetValidValuesOfAttributeFromDbOperationCompleted == null)) {
                this.GetValidValuesOfAttributeFromDbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidValuesOfAttributeFromDbOperationCompleted);
            }
            this.InvokeAsync("GetValidValuesOfAttributeFromDb", new object[] {
                        clientuser,
                        refToken,
                        categoryId,
                        nodeId,
                        fieldName,
                        lstKvpDependentFieldsAndValues,
                        lstKvpDependentFieldsAndTypes}, this.GetValidValuesOfAttributeFromDbOperationCompleted, userState);
        }
        
        private void OnGetValidValuesOfAttributeFromDbOperationCompleted(object arg) {
            if ((this.GetValidValuesOfAttributeFromDbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidValuesOfAttributeFromDbCompleted(this, new GetValidValuesOfAttributeFromDbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://adm-danismanlik.com/services/dms/DmsService/GetAllCategories", RequestNamespace="http://adm-danismanlik.com/services/dms/DmsService", ResponseNamespace="http://adm-danismanlik.com/services/dms/DmsService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntityAttributeGroupDefinition[] GetAllCategories(string clientuser, string refToken) {
            object[] results = this.Invoke("GetAllCategories", new object[] {
                        clientuser,
                        refToken});
            return ((EntityAttributeGroupDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCategoriesAsync(string clientuser, string refToken) {
            this.GetAllCategoriesAsync(clientuser, refToken, null);
        }
        
        /// <remarks/>
        public void GetAllCategoriesAsync(string clientuser, string refToken, object userState) {
            if ((this.GetAllCategoriesOperationCompleted == null)) {
                this.GetAllCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetAllCategories", new object[] {
                        clientuser,
                        refToken}, this.GetAllCategoriesOperationCompleted, userState);
        }
        
        private void OnGetAllCategoriesOperationCompleted(object arg) {
            if ((this.GetAllCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCategoriesCompleted(this, new GetAllCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityPlainCategory {
        
        private KeyValuePair[] attributesField;
        
        private string categoryNameField;
        
        /// <remarks/>
        public KeyValuePair[] Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class KeyValuePair {
        
        private string keyField;
        
        private string valueField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class KeyValueObjectPair {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class AttrDefinition {
        
        private int idField;
        
        private string attributeTypeField;
        
        private string displayNameField;
        
        private int displayLengthField;
        
        private int maxLengthField;
        
        private int maxValuesField;
        
        private int minValuesField;
        
        private bool requiredField;
        
        private bool readOnlyField;
        
        private bool searchableField;
        
        private bool showTimeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string AttributeType {
            get {
                return this.attributeTypeField;
            }
            set {
                this.attributeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayLength {
            get {
                return this.displayLengthField;
            }
            set {
                this.displayLengthField = value;
            }
        }
        
        /// <remarks/>
        public int MaxLength {
            get {
                return this.maxLengthField;
            }
            set {
                this.maxLengthField = value;
            }
        }
        
        /// <remarks/>
        public int MaxValues {
            get {
                return this.maxValuesField;
            }
            set {
                this.maxValuesField = value;
            }
        }
        
        /// <remarks/>
        public int MinValues {
            get {
                return this.minValuesField;
            }
            set {
                this.minValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public bool Searchable {
            get {
                return this.searchableField;
            }
            set {
                this.searchableField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowTime {
            get {
                return this.showTimeField;
            }
            set {
                this.showTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class CatDefinition {
        
        private int idField;
        
        private string categoryNameField;
        
        private string categoryDescriptionField;
        
        private bool autoCreateInDMSField;
        
        private AttrDefinition[] attrDefinitionsField;
        
        private long dmsIdField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryDescription {
            get {
                return this.categoryDescriptionField;
            }
            set {
                this.categoryDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool AutoCreateInDMS {
            get {
                return this.autoCreateInDMSField;
            }
            set {
                this.autoCreateInDMSField = value;
            }
        }
        
        /// <remarks/>
        public AttrDefinition[] AttrDefinitions {
            get {
                return this.attrDefinitionsField;
            }
            set {
                this.attrDefinitionsField = value;
            }
        }
        
        /// <remarks/>
        public long DmsId {
            get {
                return this.dmsIdField;
            }
            set {
                this.dmsIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityAttachment {
        
        private System.DateTime createdDateField;
        
        private string fileNameField;
        
        private long fileSizeField;
        
        private System.DateTime modifiedDateField;
        
        private byte[] contentsField;
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public long FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeAuditRecord {
        
        private System.DateTime auditDateField;
        
        private int auditNumberField;
        
        private string auditStringField;
        
        private long nodeIdField;
        
        private long performerIdField;
        
        private string performerUsernameField;
        
        /// <remarks/>
        public System.DateTime AuditDate {
            get {
                return this.auditDateField;
            }
            set {
                this.auditDateField = value;
            }
        }
        
        /// <remarks/>
        public int AuditNumber {
            get {
                return this.auditNumberField;
            }
            set {
                this.auditNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AuditString {
            get {
                return this.auditStringField;
            }
            set {
                this.auditStringField = value;
            }
        }
        
        /// <remarks/>
        public long NodeId {
            get {
                return this.nodeIdField;
            }
            set {
                this.nodeIdField = value;
            }
        }
        
        /// <remarks/>
        public long PerformerId {
            get {
                return this.performerIdField;
            }
            set {
                this.performerIdField = value;
            }
        }
        
        /// <remarks/>
        public string PerformerUsername {
            get {
                return this.performerUsernameField;
            }
            set {
                this.performerUsernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityVersion {
        
        private string commentField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private System.Nullable<System.DateTime> fileCreateDateField;
        
        private string fileCreatorField;
        
        private long fileDataSizeField;
        
        private System.Nullable<System.DateTime> fileModifyDateField;
        
        private string filenameField;
        
        private int filePlatformField;
        
        private long fileResSizeField;
        
        private string fileTypeField;
        
        private long idField;
        
        private int lockedField;
        
        private System.Nullable<long> lockedByField;
        
        private System.Nullable<System.DateTime> lockedDateField;
        
        private EntityMetadata metadataField;
        
        private string mimeTypeField;
        
        private System.Nullable<System.DateTime> modifyDateField;
        
        private string nameField;
        
        private long nodeIDField;
        
        private long ownerField;
        
        private long providerIDField;
        
        private string providerNameField;
        
        private string typeField;
        
        private long verMajorField;
        
        private long verMinorField;
        
        private long numberField;
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FileCreateDate {
            get {
                return this.fileCreateDateField;
            }
            set {
                this.fileCreateDateField = value;
            }
        }
        
        /// <remarks/>
        public string FileCreator {
            get {
                return this.fileCreatorField;
            }
            set {
                this.fileCreatorField = value;
            }
        }
        
        /// <remarks/>
        public long FileDataSize {
            get {
                return this.fileDataSizeField;
            }
            set {
                this.fileDataSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FileModifyDate {
            get {
                return this.fileModifyDateField;
            }
            set {
                this.fileModifyDateField = value;
            }
        }
        
        /// <remarks/>
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public int FilePlatform {
            get {
                return this.filePlatformField;
            }
            set {
                this.filePlatformField = value;
            }
        }
        
        /// <remarks/>
        public long FileResSize {
            get {
                return this.fileResSizeField;
            }
            set {
                this.fileResSizeField = value;
            }
        }
        
        /// <remarks/>
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LockedBy {
            get {
                return this.lockedByField;
            }
            set {
                this.lockedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LockedDate {
            get {
                return this.lockedDateField;
            }
            set {
                this.lockedDateField = value;
            }
        }
        
        /// <remarks/>
        public EntityMetadata Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ModifyDate {
            get {
                return this.modifyDateField;
            }
            set {
                this.modifyDateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public long NodeID {
            get {
                return this.nodeIDField;
            }
            set {
                this.nodeIDField = value;
            }
        }
        
        /// <remarks/>
        public long Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public long ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderName {
            get {
                return this.providerNameField;
            }
            set {
                this.providerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public long VerMajor {
            get {
                return this.verMajorField;
            }
            set {
                this.verMajorField = value;
            }
        }
        
        /// <remarks/>
        public long VerMinor {
            get {
                return this.verMinorField;
            }
            set {
                this.verMinorField = value;
            }
        }
        
        /// <remarks/>
        public long Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityMetadata {
        
        private EntityAttributeGroup[] attributeGroupsField;
        
        /// <remarks/>
        public EntityAttributeGroup[] AttributeGroups {
            get {
                return this.attributeGroupsField;
            }
            set {
                this.attributeGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityAttributeGroup {
        
        private string displayNameField;
        
        private string keyField;
        
        private string typeField;
        
        private EntityDataValue[] valuesField;
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public EntityDataValue[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityDataValue {
        
        private string keyField;
        
        private string descriptionField;
        
        private string typeField;
        
        private object[] valuesField;
        
        private object[] validValuesField;
        
        private string[] dependentFieldsField;
        
        private bool populatedFromDbField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public object[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        public object[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
            }
        }
        
        /// <remarks/>
        public string[] DependentFields {
            get {
                return this.dependentFieldsField;
            }
            set {
                this.dependentFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool PopulatedFromDb {
            get {
                return this.populatedFromDbField;
            }
            set {
                this.populatedFromDbField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeVersionInfo {
        
        private bool advancedVersionControlField;
        
        private System.Nullable<long> fileDataSizeField;
        
        private System.Nullable<long> fileResSizeField;
        
        private System.Nullable<long> majorField;
        
        private string mimeTypeField;
        
        private bool supportsAdvancedVersionControlField;
        
        private long versionNumField;
        
        private EntityVersion[] versionsField;
        
        private System.Nullable<int> versionsToKeepField;
        
        /// <remarks/>
        public bool AdvancedVersionControl {
            get {
                return this.advancedVersionControlField;
            }
            set {
                this.advancedVersionControlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FileDataSize {
            get {
                return this.fileDataSizeField;
            }
            set {
                this.fileDataSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> FileResSize {
            get {
                return this.fileResSizeField;
            }
            set {
                this.fileResSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool SupportsAdvancedVersionControl {
            get {
                return this.supportsAdvancedVersionControlField;
            }
            set {
                this.supportsAdvancedVersionControlField = value;
            }
        }
        
        /// <remarks/>
        public long VersionNum {
            get {
                return this.versionNumField;
            }
            set {
                this.versionNumField = value;
            }
        }
        
        /// <remarks/>
        public EntityVersion[] Versions {
            get {
                return this.versionsField;
            }
            set {
                this.versionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VersionsToKeep {
            get {
                return this.versionsToKeepField;
            }
            set {
                this.versionsToKeepField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeReservationInfo {
        
        private bool reservedField;
        
        private long reservedByField;
        
        private System.Nullable<System.DateTime> reservedDateField;
        
        /// <remarks/>
        public bool Reserved {
            get {
                return this.reservedField;
            }
            set {
                this.reservedField = value;
            }
        }
        
        /// <remarks/>
        public long ReservedBy {
            get {
                return this.reservedByField;
            }
            set {
                this.reservedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReservedDate {
            get {
                return this.reservedDateField;
            }
            set {
                this.reservedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeReferenceInfo {
        
        private long originalIdField;
        
        private string originalTypeField;
        
        private System.Nullable<long> versionNumField;
        
        /// <remarks/>
        public long OriginalId {
            get {
                return this.originalIdField;
            }
            set {
                this.originalIdField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalType {
            get {
                return this.originalTypeField;
            }
            set {
                this.originalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> VersionNum {
            get {
                return this.versionNumField;
            }
            set {
                this.versionNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodePermissions {
        
        private bool addItemsPermissionField;
        
        private bool deletePermissionField;
        
        private bool deleteVersionsPermissionField;
        
        private bool editAttributesPermissionField;
        
        private bool editPermissionsPermissionField;
        
        private bool modifyPermissionField;
        
        private bool reservePermissionField;
        
        private bool seeContentsPermissionField;
        
        private bool seePermissionField;
        
        /// <remarks/>
        public bool AddItemsPermission {
            get {
                return this.addItemsPermissionField;
            }
            set {
                this.addItemsPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool DeletePermission {
            get {
                return this.deletePermissionField;
            }
            set {
                this.deletePermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool DeleteVersionsPermission {
            get {
                return this.deleteVersionsPermissionField;
            }
            set {
                this.deleteVersionsPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool EditAttributesPermission {
            get {
                return this.editAttributesPermissionField;
            }
            set {
                this.editAttributesPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool EditPermissionsPermission {
            get {
                return this.editPermissionsPermissionField;
            }
            set {
                this.editPermissionsPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool ModifyPermission {
            get {
                return this.modifyPermissionField;
            }
            set {
                this.modifyPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool ReservePermission {
            get {
                return this.reservePermissionField;
            }
            set {
                this.reservePermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool SeeContentsPermission {
            get {
                return this.seeContentsPermissionField;
            }
            set {
                this.seeContentsPermissionField = value;
            }
        }
        
        /// <remarks/>
        public bool SeePermission {
            get {
                return this.seePermissionField;
            }
            set {
                this.seePermissionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeContainerInfo {
        
        private int childCountField;
        
        private string[] childTypesField;
        
        /// <remarks/>
        public int ChildCount {
            get {
                return this.childCountField;
            }
            set {
                this.childCountField = value;
            }
        }
        
        /// <remarks/>
        public string[] ChildTypes {
            get {
                return this.childTypesField;
            }
            set {
                this.childTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNodeFeature {
        
        private System.Nullable<bool> booleanValueField;
        
        private System.Nullable<System.DateTime> dateValueField;
        
        private System.Nullable<int> integerValueField;
        
        private System.Nullable<long> longValueField;
        
        private string nameField;
        
        private string stringValueField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> BooleanValue {
            get {
                return this.booleanValueField;
            }
            set {
                this.booleanValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateValue {
            get {
                return this.dateValueField;
            }
            set {
                this.dateValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IntegerValue {
            get {
                return this.integerValueField;
            }
            set {
                this.integerValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> LongValue {
            get {
                return this.longValueField;
            }
            set {
                this.longValueField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityNode {
        
        private System.Nullable<int> catalogField;
        
        private string commentField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private System.Nullable<long> createdByField;
        
        private string displayTypeField;
        
        private EntityNodeFeature[] featuresField;
        
        private EntityMetadata metadataField;
        
        private long idField;
        
        private bool isContainerField;
        
        private bool isReferenceField;
        
        private bool isReservableField;
        
        private EntityNodeContainerInfo containerInfoField;
        
        private EntityNodePermissions permissionsField;
        
        private EntityNodeReferenceInfo referenceInfoField;
        
        private EntityNodeReservationInfo reservationInfoField;
        
        private EntityNodeVersionInfo versionInfoField;
        
        private bool isVersionableField;
        
        private System.Nullable<System.DateTime> modifyDateField;
        
        private string nameField;
        
        private string nicknameField;
        
        private long parentIdField;
        
        private System.Nullable<long> positionField;
        
        private bool releasedField;
        
        private string typeField;
        
        private long volumeIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Catalog {
            get {
                return this.catalogField;
            }
            set {
                this.catalogField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayType {
            get {
                return this.displayTypeField;
            }
            set {
                this.displayTypeField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodeFeature[] Features {
            get {
                return this.featuresField;
            }
            set {
                this.featuresField = value;
            }
        }
        
        /// <remarks/>
        public EntityMetadata Metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool IsContainer {
            get {
                return this.isContainerField;
            }
            set {
                this.isContainerField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReference {
            get {
                return this.isReferenceField;
            }
            set {
                this.isReferenceField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReservable {
            get {
                return this.isReservableField;
            }
            set {
                this.isReservableField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodeContainerInfo ContainerInfo {
            get {
                return this.containerInfoField;
            }
            set {
                this.containerInfoField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodePermissions Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodeReferenceInfo ReferenceInfo {
            get {
                return this.referenceInfoField;
            }
            set {
                this.referenceInfoField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodeReservationInfo ReservationInfo {
            get {
                return this.reservationInfoField;
            }
            set {
                this.reservationInfoField = value;
            }
        }
        
        /// <remarks/>
        public EntityNodeVersionInfo VersionInfo {
            get {
                return this.versionInfoField;
            }
            set {
                this.versionInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVersionable {
            get {
                return this.isVersionableField;
            }
            set {
                this.isVersionableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ModifyDate {
            get {
                return this.modifyDateField;
            }
            set {
                this.modifyDateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Nickname {
            get {
                return this.nicknameField;
            }
            set {
                this.nicknameField = value;
            }
        }
        
        /// <remarks/>
        public long ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool Released {
            get {
                return this.releasedField;
            }
            set {
                this.releasedField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public long VolumeID {
            get {
                return this.volumeIDField;
            }
            set {
                this.volumeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityAttributeDefinition {
        
        private string displayNameField;
        
        private long idField;
        
        private string keyField;
        
        private System.Nullable<int> maxValuesField;
        
        private System.Nullable<int> minValuesField;
        
        private bool readOnlyField;
        
        private System.Nullable<bool> requiredField;
        
        private System.Nullable<bool> searchableField;
        
        private string typeField;
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxValues {
            get {
                return this.maxValuesField;
            }
            set {
                this.maxValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MinValues {
            get {
                return this.minValuesField;
            }
            set {
                this.minValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Searchable {
            get {
                return this.searchableField;
            }
            set {
                this.searchableField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public partial class EntityAttributeGroupDefinition {
        
        private EntityAttributeDefinition[] entityAttributeDefinitionsField;
        
        private string displayNameField;
        
        private long idField;
        
        private string keyField;
        
        private string typeField;
        
        /// <remarks/>
        public EntityAttributeDefinition[] EntityAttributeDefinitions {
            get {
                return this.entityAttributeDefinitionsField;
            }
            set {
                this.entityAttributeDefinitionsField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://adm-danismanlik.com/services/dms/DmsService")]
    public enum EntityAttributeSourceType {
        
        /// <remarks/>
        DESTINATION,
        
        /// <remarks/>
        MERGE,
        
        /// <remarks/>
        ORIGINAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetNodeCategoryListsCompletedEventHandler(object sender, GetNodeCategoryListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNodeCategoryListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNodeCategoryListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityPlainCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityPlainCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCategoryDefinitionCompletedEventHandler(object sender, GetCategoryDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityAttributeGroupDefinition Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityAttributeGroupDefinition)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RemoveFromFavoritesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddToFavoritesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFavoritesOfUserCompletedEventHandler(object sender, GetFavoritesOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavoritesOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavoritesOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetReferencesOfNodeByIdCompletedEventHandler(object sender, GetReferencesOfNodeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesOfNodeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesOfNodeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAuditRecordsOfNodeCompletedEventHandler(object sender, GetAuditRecordsOfNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuditRecordsOfNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuditRecordsOfNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNodeAuditRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNodeAuditRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddDocumentWithMetadataCompletedEventHandler(object sender, AddDocumentWithMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocumentWithMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocumentWithMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddMajorVersionCompletedEventHandler(object sender, AddMajorVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMajorVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMajorVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMetadataLanguagesCompletedEventHandler(object sender, GetMetadataLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetadataLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetadataLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RenameNodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CopyNodeCompletedEventHandler(object sender, CopyNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteNodeCompletedEventHandler(object sender, DeleteNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateFoldersCompletedEventHandler(object sender, CreateFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void MoveNodeCompletedEventHandler(object sender, MoveNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetChildNodesCompletedEventHandler(object sender, GetChildNodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetVersionsCompletedEventHandler(object sender, GetVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityVersion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DownloadDocumentToServerAndReturnRefGuidCompletedEventHandler(object sender, DownloadDocumentToServerAndReturnRefGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDocumentToServerAndReturnRefGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDocumentToServerAndReturnRefGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DownloadDocumentCompletedEventHandler(object sender, DownloadDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateMultilingualMetadataOfNodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddDocumentOrVersionCompletedEventHandler(object sender, AddDocumentOrVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDocumentOrVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDocumentOrVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventHandler(object sender, GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityNodeListIncludingChildrenUsingTypeFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventHandler(object sender, GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeyValuePairListIncludingChildrenUsingTypeFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetFolderListIncludingChildrenCompletedEventHandler(object sender, GetFolderListIncludingChildrenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderListIncludingChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderListIncludingChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KeyValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KeyValuePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddVersionCompletedEventHandler(object sender, AddVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEntityNodeByNameCompletedEventHandler(object sender, GetEntityNodeByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityNodeByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityNodeByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEntityNodeFromIdCompletedEventHandler(object sender, GetEntityNodeFromIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityNodeFromIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityNodeFromIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateCategoryCompletedEventHandler(object sender, CreateCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventHandler(object sender, IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNodeAvailableWithSameNameUnderGivenFolderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void IsNodeAvailableWithSameNameCompletedEventHandler(object sender, IsNodeAvailableWithSameNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNodeAvailableWithSameNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNodeAvailableWithSameNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetInheritedCategoryIdsOfNodeCompletedEventHandler(object sender, GetInheritedCategoryIdsOfNodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInheritedCategoryIdsOfNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInheritedCategoryIdsOfNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void AddOrUpdateNodeCategoriesCompletedEventHandler(object sender, AddOrUpdateNodeCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrUpdateNodeCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrUpdateNodeCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEntityAttributeGroupOfCategoryCompletedEventHandler(object sender, GetEntityAttributeGroupOfCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityAttributeGroupOfCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityAttributeGroupOfCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityAttributeGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityAttributeGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetEntityMetadataCompletedEventHandler(object sender, GetEntityMetadataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityMetadata Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityMetadata)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetValidValuesOfAttributeFromDbCompletedEventHandler(object sender, GetValidValuesOfAttributeFromDbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidValuesOfAttributeFromDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidValuesOfAttributeFromDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAllCategoriesCompletedEventHandler(object sender, GetAllCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityAttributeGroupDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntityAttributeGroupDefinition[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591